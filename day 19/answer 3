Loops in JavaScript : Loops in JavaScript are used to execute a block of code repeatedly as long as a specified condition is true. They are essential for automating repetitive tasks and iterating over arrays or other iterable objects. JavaScript provides several types of loops:
The for Loop
The for loop is used when you know the number of iterations in advance.
Syntax:
javascript

for (initialization; condition; increment/decrement) {
 // code to be executed in each iteration
}

Example:
javascript

for (let i = 0; i < 5; i++) {
 console.log(i);
}

The while Loop
The while loop is used when you don't know the number of iterations in advance but want to execute the code block as long as a condition is true.
Syntax:
javascript

while (condition) {
 // code to be executed as long as condition is true
}

Example:
javascript

let i = 0;
while (i < 5) {
 console.log(i);
 i++;
}

The do...while Loop
The do...while loop executes the code block once before checking the condition. It then repeats the loop as long as the condition is true.
Syntax:
javascript

do {
 // code to be executed
} while (condition);

Example:
javascript
let i = 0;
do {
 console.log(i);
 i++;
} while (i < 5);

 The for...in Loop
The for...in loop is used to iterate over the properties of an object.
Syntax:
javascript

for (variable in object) {
 // code to be executed for each property
}

Example:
javascript

const person = {
 name: 'John',
 age: 30,
 gender: 'male'
};

for (let key in person) {
 console.log(key + ': ' + person[key]);
}

The for...of Loop
The for...of loop is used to iterate over iterable objects such as arrays, strings, maps, sets, etc.
Syntax:
javascript

for (variable of iterable) {
 // code to be executed for each element
}

Example:
javascript

const colors = ['red', 'green', 'blue'];
for (let color of colors) {
 console.log(color);
}

These loops are powerful tools for controlling the flow of your code and performing repetitive tasks efficiently in JavaScript.

